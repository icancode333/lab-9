
const express = require('express');
const router = express.Router();
const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();


// Routes
// Get all puppies
router.get('/', async (req, res) => {
    try {
      const puppies = await prisma.puppies.findMany();
      res.json(puppies);
    } catch (error) {
      console.error('Error fetching puppies:', error.message);
      res.status(500).send('Internal Server Error');
    }
  });
  
  // Get puppy by pet_id
router.get('/:pet_id', async (req, res) => {
    const puppy = await prisma.puppies.findUnique({
      where: { pet_id: parseInt(req.params.pet_id) },
    });
    res.json(puppy);
  });
  
  // Add new puppy
router.post('/', async (req, res) => {
    const newPuppy = await prisma.puppies.create({
      data: req.body,
    });
    res.json(newPuppy);
  });
  
  // Update puppy by pet_id
router.put('/:pet_id', async (req, res) => {
  try {
    const petId = parseInt(req.params.pet_id, 10);

    if (isNaN(petId)) {
      return res.status(400).send('Invalid pet_id: must be a number');
    }

    const updatedPuppy = await prisma.puppies.update({
      where: { pet_id: petId },
      data: req.body,
    });

    res.json(updatedPuppy);
  } catch (error) {
    if (error.code === 'P2025') {
      return res.status(404).send('Puppy not found');
    }
    console.error('Error updating puppy:', error.message);
    res.status(500).send('Internal Server Error');
  }
});
  
  // Delete puppy by pet_id
router.delete('/:pet_id', async (req, res) => {
    const { pet_id } = req.params;
    await prisma.puppies.delete({
      where: { pet_id: parseInt(req.params.pet_id) },
    });
    res.sendStatus(204);
  });
  
  module.exports = router;

